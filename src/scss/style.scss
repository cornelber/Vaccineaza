@use 'sass:math';
@use '../../node_modules/sass-rem' as *;

// Importing Mixins and Base Colors
@import './abstracts/mixins.scss';
@import './abstracts/colors.scss';

// Base Color
$maincolor: $text-main;

// Importing Fonts and Icon Fonts
@import './base/fonts.scss';
@import './base/icons';

// Main Font Settings
$fontFamily: 'Onest';
$fontSize: rem(16px);

// Container and Breakpoint Settings
$minWidth: 320;             // Marimea minima a ecranului
$maxWidth: 1920;            // Marimea frame-ului din design
$maxWidthContainer: 1128;   // Marimea Containerului
$containerPadding: 30;      // Paddingul Containerului(15 din stanga/15 din dreapta)
$responsiveType: 1;         // Tipul adaptiv: 1 - containerul nu are breakpoints; 2 - containerul are breakpoints
$containerWidth: $maxWidthContainer + $containerPadding;    // Marimea cand lucreaza primul breakpoint

// Breakpoints
$pc: rem($containerWidth + px);
$tablet: rem(991.98px);
$mobile: rem(767.98px);
$mobileMedium: rem(639.98px);
$mobileSmall: rem(479.98px);

// Importing Reset Styles
@import './base/reset.scss';

// Wrapper Styles
.wrapper {
    min-width: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    min-height: 100vh;
    > main {                // Impingem footerul jos
        flex: 1 1 auto;
    }
    > * {                   // Fixarea sliderurilor
        min-width: 0;
    }
}

// Container Styles
// Applied to classes containing "__container" (header__container, main__container, etc)
@if ($responsiveType==1) {
    [class*='__container'] {
        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer + px);
            box-sizing: content-box;
            margin: 0 auto;
        }
        @if ($containerPadding>0) {
            padding: 0 rem(math.div($containerPadding, 2) + px);
        }
    }
} @else {
    [class*='__container'] {
        margin: 0 auto;
        @if ($maxWidthContainer>0) {
            max-width: rem($maxWidthContainer);
            box-sizing: content-box;
        } @else {
            @if ($containerPadding>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
        @media (max-width: $pc) {
            max-width: rem(970px);
        }
        @media (max-width: $tablet) {
            max-width: rem(750px);
        }
        @media (max-width: $mobile) {
            max-width: none;
            @if ($containerPadding>0 and $maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
    }
}

// Importing Common Styles
@import './base/ui.scss';

// Importing Component Styles
@import 'layout/footer.scss';
@import 'layout/header.scss';
@import 'components/dropdown.scss';
@import 'components/burger.scss';
@import 'components/buttons.scss';
@import 'components/links.scss';
@import 'components/card.scss';
@import 'components/accordion.scss';
@import 'components/modal.scss';
@import 'components/article.scss';
@import 'components/quote.scss';
@import 'components/aside.scss';
@import 'components/gallery.scss';
@import 'components/tabs.scss';
@import 'vendors/swiper.scss';

// Importing Page Sections
@import 'components/sections.scss';

// Importing Page Styles
@import 'pages/home.scss';